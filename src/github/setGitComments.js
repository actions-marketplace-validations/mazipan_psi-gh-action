const github = require('@actions/github')
const core = require('@actions/core')
const { generateCommentString, createSuccessStatus } = require('../utils')

exports.setGitComments = async function setGitComments (data, token) {
  const context = github.context
  const actionUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`

  const octokit = github.getOctokit(token)
  try {
    core.info(`> Trying to create comment on commit: ${context.sha}`)
    const comments = await octokit.repos.listCommentsForCommit({
      owner: context.repo.owner,
      repo: context.repo.repo,
      commit_sha: context.sha,
      page: 1
    })

    core.info(`> PAYLOAD COMMENTS: ${JSON.stringify(comments)}`)

    await octokit.repos.createCommitComment({
      owner: context.repo.owner,
      repo: context.repo.repo,
      commit_sha: context.sha,
      body: `${generateCommentString(data)}

  *Generated by [psi-github-action](https://github.com/mazipan/psi-gh-action/)*
      `
    })
  } catch (error) {
    core.info(error)
  }

  // status for current commit
  await createSuccessStatus({
    context,
    octokit,
    hash: context.sha,
    url: actionUrl
  })
}
